name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # master 브랜치에 푸시될 때마다 실행

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntu 최신 버전에서 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 리포지토리의 코드를 체크아웃

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '18'  # 사용할 JDK 버전
          distribution: 'adopt'  # JDK 배포판 설정

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew  # gradlew에 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew build # Gradle을 사용하여 빌드 및 테스트 실행

      - name: Run tests
        run: ./gradlew test  # 테스트 실행

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/homeseek:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/homeseek:latest

      - name: Deploy to EC2
        env:
            EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_USER: ${{ secrets.EC2_USER }}
        run: |
            echo "$EC2_SSH_KEY" > ec2_key.pem
            chmod 600 ec2_key.pem
            ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/homeseek:latest  # 최신 Docker 이미지를 EC2로 가져오기
                docker ps -q --filter "ancestor=${{ secrets.DOCKERHUB_USERNAME }}/homeseek:latest" | xargs -r docker stop  # 기존 컨테이너 중지
                docker ps -aq --filter "ancestor=${{ secrets.DOCKERHUB_USERNAME }}/homeseek:latest" | xargs -r docker rm  # 기존 컨테이너 삭제
                docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/homeseek:latest  # 새 컨테이너 실행
            EOF